State 0 conflicts: 1 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions
    2           | %empty

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    4 functions: function functions
    5          | %empty

    6 identifier: IDENT

    7 identifiers: identifier COMMA identifiers
    8            | identifier

    9 declaration: identifiers COLON INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 declarations: declaration SEMICOLON declarations
   12             | %empty

   13 statement: var ASSIGN expression
   14          | IF boolexpr THEN statements ENDIF
   15          | IF boolexpr THEN statements ELSE statements ENDIF
   16          | WHILE boolexpr BEGINLOOP statements ENDLOOP
   17          | DO BEGINLOOP statements ENDLOOP WHILE boolexpr
   18          | READ vars
   19          | WRITE vars
   20          | CONTINUE
   21          | RETURN expression

   22 statements: statement SEMICOLON statements
   23           | %empty

   24 boolexpr: relationandexpr OR relationandexpr
   25         | relationandexpr

   26 relationandexpr: relationandexpr AND relationexpr
   27                | relationexpr

   28 relationexpr: expression comp expression
   29             | NOT expression comp expression
   30             | TRUE
   31             | NOT TRUE
   32             | FALSE
   33             | NOT FALSE
   34             | L_PAREN boolexpr R_PAREN

   35 comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LTE
   40     | GTE

   41 expression: expression ADD multiplicativeexpr
   42           | expression SUB multiplicativeexpr
   43           | multiplicativeexpr

   44 multiplicativeexpr: term MOD term
   45                   | term DIV term
   46                   | term MULT term
   47                   | term

   48 term: var
   49     | NUMBER
   50     | L_PAREN expression R_PAREN
   51     | SUB var
   52     | SUB NUMBER
   53     | SUB L_PAREN expression R_PAREN
   54     | IDENT L_PAREN expressions R_PAREN

   55 expressions: expression
   56            | expression COMMA expressions
   57            | %empty

   58 var: IDENT
   59    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   60 vars: var
   61     | var COMMA vars


Terminals, with rules where they appear

$end (0) 0
error (256)
L_PAREN (258) 34 50 53 54
R_PAREN (259) 34 50 53 54
ADD (260) 41
SUB (261) 42 51 52 53
MULT (262) 46
DIV (263) 45
EQ (264) 35
NUMBER (265) 10 49 52
IDENT (266) 3 6 54 58 59
FUNCTION (267) 3
BEGIN_PARAMS (268) 3
END_PARAMS (269) 3
BEGIN_LOCALS (270) 3
END_LOCALS (271) 3
BEGIN_BODY (272) 3
END_BODY (273) 3
ARRAY (274) 10
OF (275) 10
IF (276) 14 15
THEN (277) 14 15
ENDIF (278) 14 15
ELSE (279) 15
WHILE (280) 16 17
DO (281) 17
BEGINLOOP (282) 16 17
ENDLOOP (283) 16 17
CONTINUE (284) 20
READ (285) 18
WRITE (286) 19
AND (287) 26
OR (288) 24
NOT (289) 29 31 33
TRUE (290) 30 31
FALSE (291) 32 33
RETURN (292) 21
MOD (293) 44
NEQ (294) 36
LT (295) 37
GT (296) 38
LTE (297) 39
GTE (298) 40
INTEGER (299) 9 10
SEMICOLON (300) 3 11 22
COLON (301) 9 10
COMMA (302) 7 56 61
L_SQUARE_BRACKET (303) 10 59
R_SQUARE_BRACKET (304) 10 59
ASSIGN (305) 13


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
prog_start (52)
    on left: 1 2, on right: 0
function (53)
    on left: 3, on right: 4
functions (54)
    on left: 4 5, on right: 1 4
identifier (55)
    on left: 6, on right: 7 8
identifiers (56)
    on left: 7 8, on right: 7 9 10
declaration (57)
    on left: 9 10, on right: 11
declarations (58)
    on left: 11 12, on right: 3 11
statement (59)
    on left: 13 14 15 16 17 18 19 20 21, on right: 22
statements (60)
    on left: 22 23, on right: 3 14 15 16 17 22
boolexpr (61)
    on left: 24 25, on right: 14 15 16 17 34
relationandexpr (62)
    on left: 26 27, on right: 24 25 26
relationexpr (63)
    on left: 28 29 30 31 32 33 34, on right: 26 27
comp (64)
    on left: 35 36 37 38 39 40, on right: 28 29
expression (65)
    on left: 41 42 43, on right: 13 21 28 29 41 42 50 53 55 56 59
multiplicativeexpr (66)
    on left: 44 45 46 47, on right: 41 42 43
term (67)
    on left: 48 49 50 51 52 53 54, on right: 44 45 46 47
expressions (68)
    on left: 55 56 57, on right: 54 56
var (69)
    on left: 58 59, on right: 13 48 51 60 61
vars (70)
    on left: 60 61, on right: 18 19 61


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 2 (prog_start)
    $end      [reduce using rule 5 (functions)]
    $default  reduce using rule 2 (prog_start)

    prog_start  go to state 2
    function    go to state 3
    functions   go to state 4


State 1

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    4 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 5 (functions)

    function   go to state 3
    functions  go to state 7


State 4

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 5

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 8

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 12 (declarations)

    identifier    go to state 11
    identifiers   go to state 12
    declaration   go to state 13
    declarations  go to state 14


State 10

    6 identifier: IDENT .

    $default  reduce using rule 6 (identifier)


State 11

    7 identifiers: identifier . COMMA identifiers
    8            | identifier .

    COMMA  shift, and go to state 15

    $default  reduce using rule 8 (identifiers)


State 12

    9 declaration: identifiers . COLON INTEGER
   10            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 16


State 13

   11 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 17


State 14

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 18


State 15

    7 identifiers: identifier COMMA . identifiers

    IDENT  shift, and go to state 10

    identifier   go to state 11
    identifiers  go to state 19


State 16

    9 declaration: identifiers COLON . INTEGER
   10            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    ARRAY    shift, and go to state 20
    INTEGER  shift, and go to state 21


State 17

   11 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 12 (declarations)

    identifier    go to state 11
    identifiers   go to state 12
    declaration   go to state 13
    declarations  go to state 22


State 18

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 23


State 19

    7 identifiers: identifier COMMA identifiers .

    $default  reduce using rule 7 (identifiers)


State 20

   10 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 21

    9 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 9 (declaration)


State 22

   11 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 11 (declarations)


State 23

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 12 (declarations)

    identifier    go to state 11
    identifiers   go to state 12
    declaration   go to state 13
    declarations  go to state 25


State 24

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 27


State 26

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 30


State 29

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 23 (statements)

    statement   go to state 39
    statements  go to state 40
    var         go to state 41


State 30

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 42


State 31

   58 var: IDENT .
   59    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 43

    $default  reduce using rule 58 (var)


State 32

   14 statement: IF . boolexpr THEN statements ENDIF
   15          | IF . boolexpr THEN statements ELSE statements ENDIF

    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50

    boolexpr            go to state 51
    relationandexpr     go to state 52
    relationexpr        go to state 53
    expression          go to state 54
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 33

   16 statement: WHILE . boolexpr BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50

    boolexpr            go to state 58
    relationandexpr     go to state 52
    relationexpr        go to state 53
    expression          go to state 54
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 34

   17 statement: DO . BEGINLOOP statements ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 59


State 35

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


State 36

   18 statement: READ . vars

    IDENT  shift, and go to state 31

    var   go to state 60
    vars  go to state 61


State 37

   19 statement: WRITE . vars

    IDENT  shift, and go to state 31

    var   go to state 60
    vars  go to state 62


State 38

   21 statement: RETURN . expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    expression          go to state 64
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 39

   22 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 65


State 40

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 66


State 41

   13 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 67


State 42

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 43

   59 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    expression          go to state 68
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 44

   34 relationexpr: L_PAREN . boolexpr R_PAREN
   50 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50

    boolexpr            go to state 69
    relationandexpr     go to state 52
    relationexpr        go to state 53
    expression          go to state 70
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 45

   51 term: SUB . var
   52     | SUB . NUMBER
   53     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 31

    var  go to state 73


State 46

   49 term: NUMBER .

    $default  reduce using rule 49 (term)


State 47

   54 term: IDENT . L_PAREN expressions R_PAREN
   58 var: IDENT .
   59    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 74
    L_SQUARE_BRACKET  shift, and go to state 43

    $default  reduce using rule 58 (var)


State 48

   29 relationexpr: NOT . expression comp expression
   31             | NOT . TRUE
   33             | NOT . FALSE

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76

    expression          go to state 77
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 49

   30 relationexpr: TRUE .

    $default  reduce using rule 30 (relationexpr)


State 50

   32 relationexpr: FALSE .

    $default  reduce using rule 32 (relationexpr)


State 51

   14 statement: IF boolexpr . THEN statements ENDIF
   15          | IF boolexpr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 78


State 52

   24 boolexpr: relationandexpr . OR relationandexpr
   25         | relationandexpr .
   26 relationandexpr: relationandexpr . AND relationexpr

    AND  shift, and go to state 79
    OR   shift, and go to state 80

    $default  reduce using rule 25 (boolexpr)


State 53

   27 relationandexpr: relationexpr .

    $default  reduce using rule 27 (relationandexpr)


State 54

   28 relationexpr: expression . comp expression
   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82
    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 89


State 55

   43 expression: multiplicativeexpr .

    $default  reduce using rule 43 (expression)


State 56

   44 multiplicativeexpr: term . MOD term
   45                   | term . DIV term
   46                   | term . MULT term
   47                   | term .

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 47 (multiplicativeexpr)


State 57

   48 term: var .

    $default  reduce using rule 48 (term)


State 58

   16 statement: WHILE boolexpr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 93


State 59

   17 statement: DO BEGINLOOP . statements ENDLOOP WHILE boolexpr

    IDENT     shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 23 (statements)

    statement   go to state 39
    statements  go to state 94
    var         go to state 41


State 60

   60 vars: var .
   61     | var . COMMA vars

    COMMA  shift, and go to state 95

    $default  reduce using rule 60 (vars)


State 61

   18 statement: READ vars .

    $default  reduce using rule 18 (statement)


State 62

   19 statement: WRITE vars .

    $default  reduce using rule 19 (statement)


State 63

   50 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    expression          go to state 96
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 64

   21 statement: RETURN expression .
   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 21 (statement)


State 65

   22 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 23 (statements)

    statement   go to state 39
    statements  go to state 97
    var         go to state 41


State 66

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 3 (function)


State 67

   13 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    expression          go to state 98
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 68

   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr
   59 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    R_SQUARE_BRACKET  shift, and go to state 99


State 69

   34 relationexpr: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 100


State 70

   28 relationexpr: expression . comp expression
   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr
   50 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 101
    ADD      shift, and go to state 81
    SUB      shift, and go to state 82
    EQ       shift, and go to state 83
    NEQ      shift, and go to state 84
    LT       shift, and go to state 85
    GT       shift, and go to state 86
    LTE      shift, and go to state 87
    GTE      shift, and go to state 88

    comp  go to state 89


State 71

   53 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    expression          go to state 102
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 72

   52 term: SUB NUMBER .

    $default  reduce using rule 52 (term)


State 73

   51 term: SUB var .

    $default  reduce using rule 51 (term)


State 74

   54 term: IDENT L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    $default  reduce using rule 57 (expressions)

    expression          go to state 103
    multiplicativeexpr  go to state 55
    term                go to state 56
    expressions         go to state 104
    var                 go to state 57


State 75

   31 relationexpr: NOT TRUE .

    $default  reduce using rule 31 (relationexpr)


State 76

   33 relationexpr: NOT FALSE .

    $default  reduce using rule 33 (relationexpr)


State 77

   29 relationexpr: NOT expression . comp expression
   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82
    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 105


State 78

   14 statement: IF boolexpr THEN . statements ENDIF
   15          | IF boolexpr THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 23 (statements)

    statement   go to state 39
    statements  go to state 106
    var         go to state 41


State 79

   26 relationandexpr: relationandexpr AND . relationexpr

    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50

    relationexpr        go to state 107
    expression          go to state 54
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 80

   24 boolexpr: relationandexpr OR . relationandexpr

    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50

    relationandexpr     go to state 108
    relationexpr        go to state 53
    expression          go to state 54
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 81

   41 expression: expression ADD . multiplicativeexpr

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    multiplicativeexpr  go to state 109
    term                go to state 56
    var                 go to state 57


State 82

   42 expression: expression SUB . multiplicativeexpr

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    multiplicativeexpr  go to state 110
    term                go to state 56
    var                 go to state 57


State 83

   35 comp: EQ .

    $default  reduce using rule 35 (comp)


State 84

   36 comp: NEQ .

    $default  reduce using rule 36 (comp)


State 85

   37 comp: LT .

    $default  reduce using rule 37 (comp)


State 86

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 87

   39 comp: LTE .

    $default  reduce using rule 39 (comp)


State 88

   40 comp: GTE .

    $default  reduce using rule 40 (comp)


State 89

   28 relationexpr: expression comp . expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    expression          go to state 111
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 90

   46 multiplicativeexpr: term MULT . term

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    term  go to state 112
    var   go to state 57


State 91

   45 multiplicativeexpr: term DIV . term

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    term  go to state 113
    var   go to state 57


State 92

   44 multiplicativeexpr: term MOD . term

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    term  go to state 114
    var   go to state 57


State 93

   16 statement: WHILE boolexpr BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 23 (statements)

    statement   go to state 39
    statements  go to state 115
    var         go to state 41


State 94

   17 statement: DO BEGINLOOP statements . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 116


State 95

   61 vars: var COMMA . vars

    IDENT  shift, and go to state 31

    var   go to state 60
    vars  go to state 117


State 96

   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr
   50 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 101
    ADD      shift, and go to state 81
    SUB      shift, and go to state 82


State 97

   22 statements: statement SEMICOLON statements .

    $default  reduce using rule 22 (statements)


State 98

   13 statement: var ASSIGN expression .
   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 13 (statement)


State 99

   59 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 59 (var)


State 100

   34 relationexpr: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 34 (relationexpr)


State 101

   50 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 50 (term)


State 102

   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr
   53 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 118
    ADD      shift, and go to state 81
    SUB      shift, and go to state 82


State 103

   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr
   55 expressions: expression .
   56            | expression . COMMA expressions

    ADD    shift, and go to state 81
    SUB    shift, and go to state 82
    COMMA  shift, and go to state 119

    $default  reduce using rule 55 (expressions)


State 104

   54 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 120


State 105

   29 relationexpr: NOT expression comp . expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    expression          go to state 121
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 106

   14 statement: IF boolexpr THEN statements . ENDIF
   15          | IF boolexpr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 122
    ELSE   shift, and go to state 123


State 107

   26 relationandexpr: relationandexpr AND relationexpr .

    $default  reduce using rule 26 (relationandexpr)


State 108

   24 boolexpr: relationandexpr OR relationandexpr .
   26 relationandexpr: relationandexpr . AND relationexpr

    AND  shift, and go to state 79

    $default  reduce using rule 24 (boolexpr)


State 109

   41 expression: expression ADD multiplicativeexpr .

    $default  reduce using rule 41 (expression)


State 110

   42 expression: expression SUB multiplicativeexpr .

    $default  reduce using rule 42 (expression)


State 111

   28 relationexpr: expression comp expression .
   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 28 (relationexpr)


State 112

   46 multiplicativeexpr: term MULT term .

    $default  reduce using rule 46 (multiplicativeexpr)


State 113

   45 multiplicativeexpr: term DIV term .

    $default  reduce using rule 45 (multiplicativeexpr)


State 114

   44 multiplicativeexpr: term MOD term .

    $default  reduce using rule 44 (multiplicativeexpr)


State 115

   16 statement: WHILE boolexpr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 124


State 116

   17 statement: DO BEGINLOOP statements ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 125


State 117

   61 vars: var COMMA vars .

    $default  reduce using rule 61 (vars)


State 118

   53 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 53 (term)


State 119

   56 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47

    $default  reduce using rule 57 (expressions)

    expression          go to state 103
    multiplicativeexpr  go to state 55
    term                go to state 56
    expressions         go to state 126
    var                 go to state 57


State 120

   54 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 54 (term)


State 121

   29 relationexpr: NOT expression comp expression .
   41 expression: expression . ADD multiplicativeexpr
   42           | expression . SUB multiplicativeexpr

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 29 (relationexpr)


State 122

   14 statement: IF boolexpr THEN statements ENDIF .

    $default  reduce using rule 14 (statement)


State 123

   15 statement: IF boolexpr THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 23 (statements)

    statement   go to state 39
    statements  go to state 127
    var         go to state 41


State 124

   16 statement: WHILE boolexpr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 16 (statement)


State 125

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE . boolexpr

    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50

    boolexpr            go to state 128
    relationandexpr     go to state 52
    relationexpr        go to state 53
    expression          go to state 54
    multiplicativeexpr  go to state 55
    term                go to state 56
    var                 go to state 57


State 126

   56 expressions: expression COMMA expressions .

    $default  reduce using rule 56 (expressions)


State 127

   15 statement: IF boolexpr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 129


State 128

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE boolexpr .

    $default  reduce using rule 17 (statement)


State 129

   15 statement: IF boolexpr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 15 (statement)
